<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>quarkus-parent</artifactId>
        <groupId>io.quarkus</groupId>
        <version>999-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>quarkus-build-parent</artifactId>
    <name>Quarkus - Build Parent</name>
    <description>Build parent to bring in required dependencies</description>
    <packaging>pom</packaging>

    <properties>
        <!-- Maven plugin versions -->

        <!-- These properties are needed in order for them to be resolvable by the generated projects -->
        <!-- Quarkus uses jboss-parent and it comes with 3.8.1-jboss-1, we don't want that in the templates -->
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <kotlin.version>1.7.10</kotlin.version>
        <dokka.version>1.6.21</dokka.version>
        <scala.version>2.13.8</scala.version>
        <scala-maven-plugin.version>4.6.3</scala-maven-plugin.version>
        <!-- not pretty but this is used in the codestarts and we don't want to break compatibility -->
        <scala-plugin.version>${scala-maven-plugin.version}</scala-plugin.version>

        <!-- version.* properties are defined in jboss-parent and are overridden/updated here: -->
        <version.enforcer.plugin>3.0.0-M3</version.enforcer.plugin>
        <version.surefire.plugin>3.0.0-M7</version.surefire.plugin>
        <version.exec.plugin>3.0.0</version.exec.plugin>
        <failsafe-plugin.version>${version.surefire.plugin}</failsafe-plugin.version>

        <!-- jandex maven plugin version -->
        <jandex-maven-plugin.version>1.2.3</jandex-maven-plugin.version>

        <!-- These properties are needed in order for them to be resolvable by the documentation -->
        <!-- The Graal version we suggest using in documentation - as that's
           what we work with by self downloading it: -->
        <graal-sdk.version-for-documentation>22.1.0</graal-sdk.version-for-documentation>
        <mandrel.version-for-documentation>22.1</mandrel.version-for-documentation>

        <asciidoctorj.version>2.5.4</asciidoctorj.version>
        <htmlunit.version>2.40.0</htmlunit.version>
        <javaparser-core.version>3.24.2</javaparser-core.version>
        <jdeparser.version>2.0.3.Final</jdeparser.version>
        <subethasmtp.version>5.2.8</subethasmtp.version>

        <!-- Dev tools -->
        <freemarker.version>2.3.31</freemarker.version>
        <commonmark.version>0.19.0</commonmark.version>

        <!-- Arquillian BOM -->
        <arquillian.version>1.7.0.Alpha10</arquillian.version>

        <!-- Enable APT by default for Eclipse -->
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>

        <!--
        Supported Maven versions, interpreted as a version range
         -->
        <supported-maven-versions>[3.6.2,)</supported-maven-versions>

        <!-- These 2 properties are used by CreateProjectMojo to add the Maven Wrapper -->
        <proposed-maven-version>3.8.6</proposed-maven-version>
        <maven-wrapper.version>3.1.1</maven-wrapper.version>
        <gradle-wrapper.version>7.4.2</gradle-wrapper.version>
        <quarkus-gradle-plugin.version>${project.version}</quarkus-gradle-plugin.version>
        <quarkus-maven-plugin.version>${project.version}</quarkus-maven-plugin.version>

        <!-- MicroProfile TCK versions used to be defined here but have moved to the concrete tck modules -->

        <!-- Antlr is used by the PanacheQL parser-->
        <antlr.version>4.9.2</antlr.version>

        <!-- SELinux access label, used when mounting local volumes into containers in tests -->
        <volume.access.modifier>:Z</volume.access.modifier>

        <!-- Defaults for integration tests -->
        <elasticsearch-server.version>7.16.3</elasticsearch-server.version>
        <elasticsearch.image>docker.io/elastic/elasticsearch:${elasticsearch-server.version}</elasticsearch.image>
        <logstash.image>docker.io/elastic/logstash:${elasticsearch-server.version}</logstash.image>
        <kibana.image>docker.io/elastic/kibana:${elasticsearch-server.version}</kibana.image>
        <elasticsearch.protocol>http</elasticsearch.protocol>
        <opensearch-server.version>1.2.3</opensearch-server.version>
        <opensearch.image>docker.io/opensearchproject/opensearch:${opensearch-server.version}</opensearch.image>
        <opensearch.protocol>http</opensearch.protocol>

        <!-- Database images for JDBC/Reactive/Hibernate tests and devservices -->
        <postgres.image>docker.io/postgres:14</postgres.image>
        <mariadb.image>docker.io/mariadb:10.6</mariadb.image>
        <db2.image>docker.io/ibmcom/db2:11.5.7.0a</db2.image>
        <mssql.image>mcr.microsoft.com/mssql/server:2019-latest</mssql.image>
        <mysql.image>docker.io/mysql:8.0</mysql.image>
        <oracle.image>docker.io/gvenzl/oracle-xe:21-slim</oracle.image>
        <mongo.image>docker.io/mongo:4.4</mongo.image>

        <!-- Align various dependencies that are not really part of the bom-->
        <junit4.version>4.13.2</junit4.version>

        <!-- The image to use for tests that run Keycloak -->
        <!-- IMPORTANT: If this is changed you must also update bom/application/pom.xml and KeycloakBuildTimeConfig/DevServicesConfig in quarkus-oidc/deployment to match the version -->
        <keycloak.version>18.0.2</keycloak.version>
        <keycloak.docker.image>quay.io/keycloak/keycloak:${keycloak.version}</keycloak.docker.image>
        <keycloak.docker.legacy.image>quay.io/keycloak/keycloak:${keycloak.version}-legacy</keycloak.docker.legacy.image>

        <unboundid-ldap.version>6.0.5</unboundid-ldap.version>

        <assertj.version>3.23.1</assertj.version>

        <wiremock-jre8.version>2.33.2</wiremock-jre8.version>
        <wiremock-maven-plugin.version>7.1.0</wiremock-maven-plugin.version>

        <!-- Artemis test dependencies -->
        <artemis.version>2.23.1</artemis.version>

        <!-- Code Coverage Properties-->
        <jacoco.agent.argLine></jacoco.agent.argLine>
        <!-- Note: this version is also set in quarkus-bom but BOMs don't contribute to pluginManagement or properties -->
        <jacoco.version>0.8.8</jacoco.version>


        <asciidoctor-maven-plugin.version>2.0.0</asciidoctor-maven-plugin.version>
        <docker-maven-plugin.version>0.40.1</docker-maven-plugin.version>
        <formatter-maven-plugin.version>2.19.0</formatter-maven-plugin.version>
        <impsort-maven-plugin.version>1.7.0</impsort-maven-plugin.version>
        <maven-invoker-plugin.version>3.2.2</maven-invoker-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>

        <!-- Webjars used by the Dev UI -->
        <webjar.bootstrap.version>4.6.1</webjar.bootstrap.version>
        <webjar.font-awesome.version>6.1.1</webjar.font-awesome.version>
        <webjar.jquery.version>3.6.0</webjar.jquery.version>
        <webjar.codemirror.version>5.62.2</webjar.codemirror.version>
        <!-- we don't add mermaid as a dependency as it brings a ton of things we don't use -->
        <webjar.mermaid.version>8.9.1</webjar.mermaid.version>
        <webjar.d3js.version>6.6.0</webjar.d3js.version>
        <webjar.chartjs.version>3.7.1</webjar.chartjs.version>

        <!-- revapi API check -->
        <revapi-maven-plugin.version>0.14.6</revapi-maven-plugin.version>
        <revapi-java-plugin.version>0.26.1</revapi-java-plugin.version>
        <build-helper-plugin.version>1.9.1</build-helper-plugin.version>
        <revapi-reporter-text.version>0.14.5</revapi-reporter-text.version>
        <revapi-reporter-json.version>0.4.5</revapi-reporter-json.version>
        <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the Quarkus API. -->
        <revapi.oldVersion>1.6.0.Final</revapi.oldVersion>
        <revapi.newVersion>${project.version}</revapi.newVersion>
        <!-- severity Possible values: equivalent, nonBreaking, potentiallyBreaking, breaking -->
        <revapi.reportSeverity>nonBreaking</revapi.reportSeverity>
        <!-- Skip the API checks by default. Let the modules opt in. -->
        <revapi.skip>true</revapi.skip>
        <!-- By default don't check dependencies -->
        <revapi.checkdeps>false</revapi.checkdeps>

        <!-- Forbidden API checks -->
        <forbiddenapis-maven-plugin.version>3.1</forbiddenapis-maven-plugin.version>

        <!-- platform properties - this is a floating tag -->
        <platform.quarkus.native.builder-image>graalvm</platform.quarkus.native.builder-image>

        <script.extension>sh</script.extension>
        <docker-prune.location>${maven.multiModuleProjectDirectory}/.github/docker-prune.${script.extension}</docker-prune.location>

        <enforce-test-deps-scope.skip>${enforcer.skip}</enforce-test-deps-scope.skip>

        <surefire.argLine.additional></surefire.argLine.additional>
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Quarkus Extensions Dependencies are coming from quarkus-bom-deployment (that also imports quarkus-bom) -->
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Dev tools -->
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-devmode-test-utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.commonmark</groupId>
                <artifactId>commonmark</artifactId>
                <version>${commonmark.version}</version>
            </dependency>

            <!-- Extension processor -->
            <dependency>
                <groupId>org.jboss.jdeparser</groupId>
                <artifactId>jdeparser</artifactId>
                <version>${jdeparser.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.javaparser</groupId>
                <artifactId>javaparser-core</artifactId>
                <version>${javaparser-core.version}</version>
            </dependency>

            <!-- Miscellaneous -->
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bootstrap-core</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-war-launcher-runner</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-legacy-launcher</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.unboundid</groupId>
                <artifactId>unboundid-ldapsdk</artifactId>
                <version>${unboundid-ldap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8-standalone</artifactId>
                <version>${wiremock-jre8.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-integration-test-class-transformer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-integration-test-shared-library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-test-maven</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-security-test-utils</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj</artifactId>
                <version>${asciidoctorj.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>${htmlunit.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpmime</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Webjars for UI related -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${webjar.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>font-awesome</artifactId>
                <version>${webjar.font-awesome.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${webjar.jquery.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>codemirror</artifactId>
                <version>${webjar.codemirror.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>d3js</artifactId>
                <version>${webjar.d3js.version}</version>
            </dependency>
           <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>chartjs</artifactId>
                <version>${webjar.chartjs.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.davidmoten</groupId>
                <artifactId>subethasmtp</artifactId>
                <version>${subethasmtp.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Artemis test dependencies -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-server</artifactId>
                <version>${artemis.version}</version>
                <!-- Force the test scope as we want to make sure this is not used outside of tests -->
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.geronimo.specs</groupId>
                        <artifactId>geronimo-json_1.0_spec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.johnzon</groupId>
                        <artifactId>johnzon-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <!-- Excluding the API jar as the impl jar also contains the API -->
                    <exclusion>
                        <groupId>jakarta.json</groupId>
                        <artifactId>jakarta.json-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-amqp-protocol</artifactId>
                <version>${artemis.version}</version>
                <!-- Force the test scope as we want to make sure this is not used outside of tests -->
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.activemq</groupId>
                        <artifactId>artemis-server</artifactId>
                    </exclusion>
                    <!-- Excluding the API jar as the impl jar also contains the API -->
                    <exclusion>
                        <groupId>jakarta.json</groupId>
                        <artifactId>jakarta.json-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-bom</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.surefire.plugin}</version>
                    <configuration>
                        <!-- combine.self suppresses warnings about java.io.tmpdir being defined twice -->
                        <systemPropertyVariables combine.self="override">
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo.local>${settings.localRepository}</maven.repo.local>
                            <maven.settings>${session.request.userSettingsFile.path}</maven.settings>
                            <!-- some dev tools tests need the following properties -->
                            <project.version>${project.version}</project.version>
                            <project.groupId>${project.groupId}</project.groupId>
                        </systemPropertyVariables>
                        <!-- limit the amount of memory surefire can use, 1500m should be plenty-->
                        <!-- set tmpdir as early as possible because surefire sets it too late for JDK16 -->
                        <argLine>${jacoco.agent.argLine} -Xmx1500m -XX:MaxMetaspaceSize=1500m -Djava.io.tmpdir="${project.build.directory}" ${surefire.argLine.additional}</argLine>
                        <excludedEnvironmentVariables>MAVEN_OPTS</excludedEnvironmentVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo.local>${settings.localRepository}</maven.repo.local>
                            <maven.settings>${session.request.userSettingsFile.path}</maven.settings>
                            <!-- some dev tools tests need the following properties -->
                            <project.version>${project.version}</project.version>
                            <project.groupId>${project.groupId}</project.groupId>
                        </systemPropertyVariables>
                        <!-- set tmpdir as early as possible because failsafe sets it too late for JDK16 -->
                        <argLine>-Djava.io.tmpdir="${project.build.directory}"</argLine>
                        <excludedEnvironmentVariables>MAVEN_OPTS</excludedEnvironmentVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${project.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-extension-maven-plugin</artifactId>
                    <version>${project.version}</version>
                    <executions>
                        <execution>
                            <id>generate-extension-descriptor</id>
                            <goals>
                                <goal>extension-descriptor</goal>
                            </goals>
                            <phase>process-resources</phase>
                            <configuration>
                                <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}
                                </deployment>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <configuration>
                                <rules>
                                    <dependencyConvergence/>
                                    <requireJavaVersion>
                                        <version>[${maven.compiler.release},)</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>${supported-maven-versions}</version>
                                    </requireMavenVersion>
                                    <!-- Disabled due to https://issues.apache.org/jira/browse/MENFORCER-359 (3.0.0-M3)
                                         3.0.0 suffers from https://issues.apache.org/jira/browse/MENFORCER-394, so we need to wait for a fixed release.
                                    <requirePluginVersions>
                                        <phases>compile</phases>
                                        <unCheckedPluginList>io.quarkus:quarkus-extension-maven-plugin,io.quarkus:quarkus-bootstrap-maven-plugin,io.quarkus:quarkus-maven-plugin</unCheckedPluginList>
                                    </requirePluginVersions>-->
                                    <bannedDependencies>
                                        <excludes>
                                            <!-- Use Jakarta artifacts instead of JBoss specific ones -->
                                            <exclude>org.jboss.spec.javax.annotation:jboss-annotations-api_1.2_spec</exclude>
                                            <exclude>org.jboss.spec.javax.annotation:jboss-annotations-api_1.3_spec</exclude>
                                            <exclude>org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec</exclude>
                                            <exclude>org.jboss.spec.javax.transaction:jboss-transaction-api_1.3_spec</exclude>
                                            <exclude>org.jboss.spec.javax.servlet:jboss-servlet-api_4.0_spec</exclude>
                                            <exclude>org.jboss.spec.javax.security.jacc:jboss-jacc-api_1.5_spec</exclude>
                                            <exclude>org.jboss.spec.javax.security.auth.message:jboss-jaspi-api_1.1_spec</exclude>
                                            <exclude>org.jboss.spec.javax.websocket:jboss-websocket-api_1.1_spec</exclude>
                                            <exclude>org.jboss.spec.javax.interceptor:jboss-interceptors-api_1.2_spec</exclude>
                                            <exclude>org.jboss.spec.javax.el:jboss-el-api_3.0_spec</exclude>
                                            <!-- except for these 2 for now as most of the RESTEasy optional artifacts depend on them
                                            <exclude>org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec</exclude>
                                            <exclude>org.jboss.spec.javax.xml.bind:jboss-jaxb-api_2.3_spec</exclude>
                                            -->
                                            <exclude>jakarta.xml.bind:jakarta.xml.bind-api</exclude>
                                            <exclude>jakarta.ws.rs:jakarta.ws.rs-api</exclude>
                                            <!-- Exclude javax dependencies in favor of Jakarta -->
                                            <exclude>javax.activation:activation</exclude>
                                            <exclude>javax.activation:javax.activation-api</exclude>
                                            <exclude>javax.annotation:javax.annotation-api</exclude>
                                            <exclude>javax.enterprise:cdi-api</exclude>
                                            <exclude>javax.inject:javax.inject</exclude>
                                            <exclude>javax.json:javax.json-api</exclude>
                                            <exclude>javax.json.bind:javax.json.bind-api</exclude>
                                            <exclude>org.glassfish:javax.json</exclude>
                                            <exclude>org.glassfish:javax.el</exclude>
                                            <exclude>javax.persistence:javax.persistence-api</exclude>
                                            <exclude>javax.persistence:persistence-api</exclude>
                                            <exclude>javax.security.enterprise:javax.security.enterprise-api</exclude>
                                            <exclude>javax.servlet:servlet-api</exclude>
                                            <exclude>javax.servlet:javax.servlet-api</exclude>
                                            <exclude>javax.transaction:jta</exclude>
                                            <exclude>javax.transaction:javax.transaction-api</exclude>
                                            <exclude>javax.validation:validation-api</exclude>
                                            <exclude>javax.xml.bind:jaxb-api</exclude>
                                            <exclude>javax.websocket:javax.websocket-api</exclude>
                                            <exclude>javax.ws.rs:javax.ws.rs-api</exclude>
                                            <!-- Exclude jakarta.activation-api as the implementation contains it -->
                                            <exclude>jakarta.activation:jakarta.activation-api</exclude>
                                            <!-- use our jboss-logmanager -->
                                            <exclude>org.jboss.logging:jboss-logmanager</exclude>
                                            <exclude>org.jboss.logging:jboss-logging-jdk</exclude>
                                            <!-- We don't want all the API's in one jar-->
                                            <exclude>javax:javaee-api</exclude>
                                            <!-- Prevent incompatible config from coming in -->
                                            <exclude>org.wildfly.client:wildfly-client-config</exclude>
                                            <exclude>org.jboss.marshalling:jboss-marshalling-osgi</exclude>
                                            <exclude>org.jboss.spec.javax.servlet:jboss-servlet-api_3.1_spec</exclude>
                                            <!-- The API is packaged by the implementation-->
                                            <exclude>jakarta.json:jakarta.json-api</exclude>
                                            <!-- Ensure none of the deps use netty-all. This forces deps to use more fine grained netty artifacts -->
                                            <exclude>io.netty:netty-all</exclude>
                                            <!-- Ban jboss-logmanager, we use jboss-logmanager-embedded -->
                                            <exclude>org.jboss.logmanager:jboss-logmanager</exclude>
                                            <!-- Ban Log4J (use org.jboss.logmanager:log4j-jboss-logmanager instead) -->
                                            <exclude>log4j:log4j</exclude>
                                            <exclude>org.apache.logging.log4j:log4j-core</exclude>
                                            <exclude>org.apache.logging.log4j:log4j-slf4j-impl</exclude>
                                            <!-- Ban commons-logging (use org.jboss.logging:commons-logging-jboss-logging instead) -->
                                            <exclude>commons-logging:commons-logging</exclude>
                                            <exclude>commons-logging:commons-logging-api</exclude>
                                            <exclude>org.springframework:spring-jcl</exclude>
                                            <exclude>org.slf4j:jcl-over-slf4j</exclude>
                                            <!-- Ban SLF4j implementations (use org.jboss.slf4j:slf4j-jboss-logmanager instead) -->
                                            <exclude>org.jboss.slf4j:slf4j-jboss-logging</exclude>
                                            <exclude>org.slf4j:slf4j-simple</exclude>
                                            <exclude>org.slf4j:slf4j-nop</exclude>
                                            <exclude>org.slf4j:slf4j-jdk14</exclude>
                                            <exclude>org.slf4j:slf4j-log4j12</exclude>
                                            <exclude>org.slf4j:slf4j-log4j13</exclude>
                                            <!-- Ban Logback implementations -->
                                            <exclude>ch.qos.logback:logback-classic</exclude>
                                            <exclude>ch.qos.logback:logback-core</exclude>
                                            <exclude>ch.qos.logback:logback-access</exclude>
                                            <exclude>ch.qos.logback:logback</exclude>
                                            <exclude>org.osgi:org.osgi.annotation.versioning</exclude>
                                            <!-- Ban Spring Dependencies (since we have our own jars)-->
                                            <exclude>org.springframework:spring-core</exclude>
                                            <exclude>org.springframework:spring-beans</exclude>
                                            <exclude>org.springframework:spring-context</exclude>
                                            <exclude>org.springframework:spring-web</exclude>
                                            <exclude>org.springframework:spring-webmvc</exclude>
                                            <exclude>org.springframework.data:spring-data-jpa</exclude>
                                            <exclude>org.springframework.data:spring-data-commons</exclude>
                                            <exclude>org.springframework.security:spring-security-core</exclude>
                                            <exclude>org.springframework.boot:spring-boot</exclude>
                                            <!-- Ban checker-qual, we don't use Checker Framework -->
                                            <exclude>org.checkerframework:checker-qual</exclude>
                                            <!-- We use our own impl here, including this one causes problems-->
                                            <exclude>org.jboss.resteasy:resteasy-context-propagation</exclude>
                                            <exclude>com.google.android:annotations</exclude>
                                            <exclude>org.codehaus.mojo:animal-sniffer-annotations</exclude>
                                            <!-- Includes its own copy of an old version of the servlet API-->
                                            <exclude>org.apache.tomcat.embed:tomcat-embed-core</exclude>
                                            <exclude>org.jboss.modules:jboss-modules</exclude>
                                            <!-- We prefer ByteBuddy where possible -->
                                            <exclude>org.javassist:javassist</exclude>
                                        </excludes>
                                        <includes>
                                            <!-- this is for REST Assured -->
                                            <include>jakarta.xml.bind:jakarta.xml.bind-api:*:*:test</include>
                                        </includes>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>enforce-test-deps-scope</id>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <excludes>
                                            <exclude>io.quarkus:quarkus-test-*</exclude>
                                            <exclude>io.rest-assured:*</exclude>
                                            <exclude>org.assertj:*</exclude>
                                            <exclude>junit:junit</exclude>
                                        </excludes>
                                        <includes>
                                            <include>io.quarkus:quarkus-test-*:*:*:test</include>
                                            <include>io.rest-assured:*:*:*:test</include>
                                            <include>org.assertj:*:*:*:test</include>
                                            <include>junit:junit:*:*:test</include>
                                        </includes>
                                        <message>Found test dependencies with wrong scope:</message>
                                    </bannedDependencies>
                                </rules>
                                <skip>${enforce-test-deps-scope.skip}</skip>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>enforce-test-deps-junit-scope</id>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <searchTransitive>false</searchTransitive>
                                        <excludes>
                                            <exclude>org.junit.jupiter:*</exclude>
                                        </excludes>
                                        <includes>
                                            <include>org.junit.jupiter:*:*:*:test</include>
                                        </includes>
                                        <message>Found JUnit dependencies with wrong scope:</message>
                                    </bannedDependencies>
                                </rules>
                                <skip>${enforce-test-deps-scope.skip}</skip>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
                        <quiet>true</quiet>
                        <doclint>none</doclint>
                        <show>package</show>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jboss.jandex</groupId>
                    <artifactId>jandex-maven-plugin</artifactId>
                    <version>${jandex-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>${formatter-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <artifactId>quarkus-ide-config</artifactId>
                            <groupId>io.quarkus</groupId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <!-- store outside of target to speed up formatting when mvn clean is used -->
                        <cachedir>.cache/formatter-maven-plugin-${formatter-maven-plugin.version}</cachedir>
                        <configFile>eclipse-format.xml</configFile>
                        <lineEnding>LF</lineEnding>
                        <skip>${format.skip}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>impsort-maven-plugin</artifactId>
                    <version>${impsort-maven-plugin.version}</version>
                    <configuration>
                        <!-- store outside of target to speed up formatting when mvn clean is used -->
                        <cachedir>.cache/impsort-maven-plugin-${impsort-maven-plugin.version}</cachedir>
                        <groups>java.,javax.,jakarta.,org.,com.</groups>
                        <staticGroups>*</staticGroups>
                        <skip>${format.skip}</skip>
                        <removeUnused>true</removeUnused>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${antlr.version}</version><!-- keep it aligned with the runtime bom-->
                </plugin>
                <plugin>
                    <groupId>uk.co.automatictester</groupId>
                    <artifactId>wiremock-maven-plugin</artifactId>
                    <version>${wiremock-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.tomakehurst</groupId>
                            <artifactId>wiremock-jre8-standalone</artifactId>
                            <version>${wiremock-jre8.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.revapi</groupId>
                    <artifactId>revapi-maven-plugin</artifactId>
                    <version>${revapi-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <javaParameters>true</javaParameters>
                        <jvmTarget>${maven.compiler.release}</jvmTarget>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>${maven-invoker-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy</artifactId>
                            <version>3.0.9</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>format</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <configuration>
                            <removeUnused>true</removeUnused>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sort-imports</id>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>validate</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <configuration>
                            <removeUnused>true</removeUnused>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check-imports</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <serverId>ossrh</serverId>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                            <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                        ## IMPORTANT ##
                        In your ~/.m2/settings.xml you need to add and edit the following profile:
                        <profile>
                            <id>release</id>
                            <properties>
                                <gpg.useagent>false</gpg.useagent>
                                <gpg.executable>/usr/local/Cellar/gnupg@1.4/1.4.23_1/bin/gpg1</gpg.executable> <- use gpg1 on Mac OS X
                                <gpg.homedir>~/.gnupg</gpg.homedir>  <- Update to your own directory
                                <gpg.passphrase>******</gpg.passphrase> <- Add your passphrase
                            </properties>
                        </profile>
                         -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dokka</id>
            <activation>
                <property>
                    <name>dokka</name>
                </property>
                <file>
                    <exists>src/main/kotlin</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jetbrains.dokka</groupId>
                        <artifactId>dokka-maven-plugin</artifactId>
                        <version>${dokka.version}</version>
                        <executions>
                            <execution>
                                <id>dokka</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>javadocJar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <jdkVersion>11</jdkVersion>
                            <outputFormat>html</outputFormat>
                            <externalDocumentationLinks>
                                <link>
                                    <!-- Root URL of the generated documentation to link with. The trailing slash is required! -->
                                    <url>https://docs.oracle.com/en/java/javase/11/docs/api/</url>
                                </link>
                            </externalDocumentationLinks>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>eclipse</id>
            <activation>
                <property>
                    <!-- This is a trick to have the profile automatically activated by Eclipse -->
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>io.fabric8</groupId>
                                                <artifactId>
                                                    docker-maven-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [0.26.1,)
                                                </versionRange>
                                                <goals>
                                                    <goal>start</goal>
                                                    <goal>stop</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.apache.maven.plugins
                                                </groupId>
                                                <artifactId>
                                                    maven-antrun-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [1.8,)
                                                </versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.apache.maven.plugins
                                                </groupId>
                                                <artifactId>
                                                    maven-dependency-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [3.1.1,)
                                                </versionRange>
                                                <goals>
                                                    <goal>resolve</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.jboss.jandex
                                                </groupId>
                                                <artifactId>
                                                    jandex-maven-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [1.1.0,)
                                                </versionRange>
                                                <goals>
                                                    <goal>jandex</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>io.quarkus</groupId>
                                                <artifactId>
                                                    quarkus-extension-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [0.1.0,)
                                                </versionRange>
                                                <goals>
                                                    <goal>extension-list</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>test-coverage</id>
            <properties>
                <jacoco.agent.argLine>${jacoco.activated.agent.argLine}</jacoco.agent.argLine>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>io.quarkus*</include>
                                    </includes>
                                    <propertyName>jacoco.activated.agent.argLine</propertyName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>api-check</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>parse-version</id>
                                <goals>
                                    <goal>parse-version</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.revapi</groupId>
                        <artifactId>revapi-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>io.quarkus</groupId>
                                <artifactId>quarkus-revapi-config</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.revapi</groupId>
                                <artifactId>revapi-java</artifactId>
                                <version>${revapi-java-plugin.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.revapi</groupId>
                                <artifactId>revapi-reporter-json</artifactId>
                                <version>${revapi-reporter-json.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.revapi</groupId>
                                <artifactId>revapi-reporter-text</artifactId>
                                <version>${revapi-reporter-text.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <oldArtifacts>
                                <artifact>${project.groupId}:${project.artifactId}:${revapi.oldVersion}</artifact>
                            </oldArtifacts>
                            <newArtifacts>
                                <artifact>${project.groupId}:${project.artifactId}:${revapi.newVersion}</artifact>
                            </newArtifacts>
                            <!-- don't fail is false making it possible to have
                                revapi checks without requiring config files -->
                            <failOnMissingConfigurationFiles>false</failOnMissingConfigurationFiles>
                            <!-- Consider changes from the latest .Final version,
                                not from the latest non-snapshot. -->
                            <versionFormat>\d+\.\d+\.\d+\.Final</versionFormat>
                            <!-- By default revapi will check the oldArtifact
                                against the currently executed build -->
                            <!-- <checkDependencies>false</checkDependencies> -->
                            <analysisConfigurationFiles>
                                <configurationFile>
                                    <resource>revapi/revapi-configuration.xml</resource>
                                </configurationFile>
                                <configurationFile>
                                    <path>api-changes.xml</path>
                                    <roots>
                                        <root>versions/v${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</root>
                                    </roots>
                                </configurationFile>
                            </analysisConfigurationFiles>
                            <!-- By default, revapi will only fail the build
                                 if there are potentially breaking or breaking changes. However, in the report
                                 we want even non breaking changes to be present. -->
                            <reportSeverity>nonBreaking</reportSeverity>
                            <failSeverity>potentiallyBreaking</failSeverity>
                            <failBuildOnProblemsFound>true</failBuildOnProblemsFound>
                            <checkDependencies>${revapi.checkdeps}</checkDependencies>
                            <ignoreSuggestionsFormat>xml</ignoreSuggestionsFormat>
                            <ignoreSuggestionsFile>${project.build.directory}/api-changes-suggestions.xml</ignoreSuggestionsFile>
                            <expandProperties>true</expandProperties>
                        </configuration>
                        <!-- Running two executions is a workaround to make sure
                             we get a HTML report in case revapi finds some incompatible changes. The
                             "check" goal will simply fail the whole build before it could get to the
                             report. To make sure we always get a HTML report, the "report" goal needs
                             to be executed before the "check" goal. Once https://github.com/revapi/revapi/issues/11
                             is fixed it should be possible to use single execution. -->
                        <executions>
                            <execution>
                                <id>api-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                            <execution>
                                <!-- report can be found in ${build.directory}/site/revapi-report.html -->
                                <id>api-report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <script.extension>bat</script.extension>
            </properties>
        </profile>

        <profile>
            <id>mac-m1</id>
            <activation>
                <os>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <!-- Podman compatibility. Currently, mac file systems based on Plan 9 does not support SELinux labeling z and Z should not be used. When they transition to use virtiofsd, it should support SELinux labeling, and then we can use it for better container separation on the Mac.-->
                <volume.access.modifier></volume.access.modifier>

                <!-- See https://stackoverflow.com/questions/65456814/docker-apple-silicon-m1-preview-mysql-no-matching-manifest-for-linux-arm64-v8
                and https://www.emmanuelgautier.com/blog/mysql-docker-arm-m1
                This hopefully should be temporary -->
                <mysql.image>arm64v8/mysql:8-oracle</mysql.image>

                <!-- See
                https://github.com/microsoft/mssql-docker/issues/668 and https://stackoverflow.com/questions/65398641/docker-connect-sql-server-container-non-zero-code-1/66919852#66919852.
                The MS SQL image segfaults on ARM. Azure Edge is not fully compatible, but it is better than not running the tests at all.
                The :latest tag segfaults with the same segfault as MSSQL Server but 1.0.6 seems to behave well -->
                <mssql.image>mcr.microsoft.com/azure-sql-edge:1.0.6</mssql.image>
            </properties>
        </profile>

        <profile>
            <id>jakarta-rewrite</id>
            <activation>
                <property>
                    <name>jakarta-rewrite</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openrewrite.maven</groupId>
                        <artifactId>rewrite-maven-plugin</artifactId>
                        <version>4.21.0-SNAPSHOT</version>
                        <configuration>
                            <configLocation>${maven.multiModuleProjectDirectory}/jakarta/rewrite.yml</configLocation>
                            <activeStyles>
                                <style>io.quarkus.style.maven</style>
                            </activeStyles>
                            <activeRecipes>
                                <recipe>io.quarkus.build-parent</recipe>
                            </activeRecipes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
