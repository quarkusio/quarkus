<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-tck-parent</artifactId>
        <version>999-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>quarkus-tck-microprofile-rest-client</artifactId>
    <name>Quarkus - TCK - MicroProfile REST Client</name>

    <properties>
        <microprofile-rest-client-tck.version>3.0.1</microprofile-rest-client-tck.version>
        <!--
        Disabling the enforcer because of:

        For future Jakarta versions, we will need to keep javax.servlet around
        as some classes of the MicroProfile REST Client TCK rely on it.
        See https://github.com/eclipse/microprofile-rest-client/issues/346
        and https://github.com/eclipse/microprofile-rest-client/issues/341
        -->
        <enforcer.skip>true</enforcer.skip>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <!-- Disable quarkus optimization -->
                        <quarkus.arc.remove-unused-beans>false</quarkus.arc.remove-unused-beans>
                        <io.quarkus.arquillian.copy-fields>true</io.quarkus.arquillian.copy-fields>

                        <org.eclipse.microprofile.rest.client.tck.timeoutCushion>90000</org.eclipse.microprofile.rest.client.tck.timeoutCushion>
                    </systemPropertyVariables>
                    <!-- This workaround allows us to run a single test using
                        the "test" system property -->
                    <!-- https://issues.apache.org/jira/browse/SUREFIRE-569 -->
                    <dependenciesToScan>
                        <dependency>org.eclipse.microprofile.rest.client:microprofile-rest-client-tck</dependency>
                    </dependenciesToScan>
                    <reuseForks>false</reuseForks>
                    <excludes combine.children="append">
                        <!-- ConversationScope not supported in Quarkus -->
                        <exclude>org.eclipse.microprofile.rest.client.tck.cditests.HasConversationScopeTest</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>uk.co.automatictester</groupId>
                <artifactId>wiremock-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <dir>target/classes</dir>
                            <params>--port=8765 --verbose</params>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arquillian</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client-jsonb</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.rest.client</groupId>
            <artifactId>microprofile-rest-client-tck</artifactId>
            <version>${microprofile-rest-client-tck.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-servlet</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-servlets</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>javax.servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit4.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
        </dependency>
        <!--
        For future Jakarta versions, we will need to keep javax.servlet around
        as some classes of the MicroProfile REST Client TCK rely on it.
        See https://github.com/eclipse/microprofile-rest-client/issues/346
        and https://github.com/eclipse/microprofile-rest-client/issues/341
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
        </dependency>

        <!-- Minimal test dependencies to *-deployment artifacts for consistent build order -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client-deployment</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client-jsonb-deployment</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-undertow-deployment</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>jdk16-workarounds</id>
            <activation>
                <jdk>[16,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <!-- the following tests are run in a separate surefire execution
                                        by setting certain JDK system properties during launch -->
                                        <exclude>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutBuilderIndependentOfMPConfigTest</exclude>
                                        <exclude>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutTest</exclude>
                                        <exclude>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutViaMPConfigTest</exclude>
                                        <exclude>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutViaMPConfigWithConfigKeyTest</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jdk16-plain-socket-workaround</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- Temporary workaround to prevent org.eclipse.microprofile.rest.client.tck.timeout.Timeout* tests
                                        from failing because of a different exception type being thrown in Java 13+
                                        during socket connections -->
                                        <jdk.net.usePlainSocketImpl>true</jdk.net.usePlainSocketImpl>
                                    </systemPropertyVariables>
                                    <includes>
                                        <include>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutBuilderIndependentOfMPConfigTest</include>
                                        <include>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutTest</include>
                                        <include>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutViaMPConfigTest</include>
                                        <include>org.eclipse.microprofile.rest.client.tck.timeout.TimeoutViaMPConfigWithConfigKeyTest</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk18-workarounds</id>
            <activation>
                <jdk>[18,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- "unbind" the JDK16-17 workaround which is based on jdk.net.usePlainSocketImpl
                                  because that property has been removed in Java 18: https://bugs.openjdk.java.net/browse/JDK-8253119
                                  see also: https://github.com/quarkusio/quarkus/pull/19559#issuecomment-932987301 -->
                            <execution>
                                <id>jdk16-plain-socket-workaround</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
