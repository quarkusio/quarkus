<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>{project.group-id}</groupId>
    <artifactId>{project.artifact-id}</artifactId>
    <version>{project.version}</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>{java.version}</maven.compiler.source>
        <maven.compiler.target>{java.version}</maven.compiler.target>
        <maven.compiler.parameters>true</maven.compiler.parameters>

        <quarkus.platform.group-id>{quarkus.platform.group-id}</quarkus.platform.group-id>
        <quarkus.platform.artifact-id>{quarkus.platform.artifact-id}</quarkus.platform.artifact-id>
        <quarkus.platform.version>{quarkus.platform.version}</quarkus.platform.version>
        <quarkus-plugin.version>{quarkus.maven-plugin.version}</quarkus-plugin.version>
        <compiler-plugin.version>{maven-compiler-plugin.version}</compiler-plugin.version>
        <surefire-plugin.version>{maven-surefire-plugin.version}</surefire-plugin.version>
        {#if uberjar}
        <quarkus.package.type>uber-jar</quarkus.package.type>
        {/if}
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>$\{quarkus.platform.group-id}</groupId>
                <artifactId>$\{quarkus.platform.artifact-id}</artifactId>
                <version>$\{quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    {#if maven.repositories}

    <repositories>
        {#for rep in maven.repositories}
        <repository>
            <id>{rep.id}</id>
            <url>{rep.url}</url>
            <releases>
                <enabled>{rep.releases-enabled ?: true}</enabled>
            </releases>
            <snapshots>
                <enabled>{rep.snapshots-enabled ?: true}</enabled>
            </snapshots>
        </repository>
        {/for}
    </repositories>
    {/if}
    {#if maven.plugin-repositories}
    <pluginRepositories>
        {#for rep in maven.plugin-repositories}
        <pluginRepository>
            <id>{rep.id}</id>
            <url>{rep.url}</url>
            <releases>
                <enabled>{rep.releases-enabled ?: true}</enabled>
            </releases>
            <snapshots>
                <enabled>{rep.snapshots-enabled ?: true}</enabled>
            </snapshots>
        </pluginRepository>
        {/for}
    </pluginRepositories>
    {/if}

    <dependencies>
        {#each dependencies}
        <dependency>
            <groupId>{it.groupId}</groupId>
            <artifactId>{it.artifactId}</artifactId>
            {#if it.version}
            <version>{it.version}</version>
            {/if}
        </dependency>
        {/each}

        <!-- Test dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        {#each test-dependencies}
        <dependency>
            <groupId>{it.groupId}</groupId>
            <artifactId>{it.artifactId}</artifactId>
            {#if it.version}
            <version>{it.version}</version>
            {/if}
            <scope>test</scope>
        </dependency>
        {/each}
    </dependencies>

    <build>
        <plugins>
            <!-- Quarkus build plugin - also provides the quarkus:dev live-reload feature -->
            <plugin>
                <groupId>{quarkus.maven-plugin.group-id}</groupId>
                <artifactId>{quarkus.maven-plugin.artifact-id}</artifactId>
                <version>$\{quarkus-plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>$\{compiler-plugin.version}</version>
            </plugin>
            <!-- Run the tests in JVM mode -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>$\{surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>$\{maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- Use this profile to build a native executable using GraalVM -->
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
            <build>
                <plugins>
                    <!-- Run the tests with the native executable -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>$\{surefire-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <native.image.path>$\{project.build.directory}/$\{project.build.finalName}-runner</native.image.path>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <maven.home>$\{maven.home}</maven.home>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
