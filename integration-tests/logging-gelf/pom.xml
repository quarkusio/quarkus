<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-integration-tests-parent</artifactId>
        <version>999-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>quarkus-integration-test-logging-gelf</artifactId>
    <name>Quarkus - Integration Tests - Logging - GELF</name>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-logging-gelf</artifactId>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>

        <!-- Minimal test dependencies to *-deployment artifacts for consistent build order -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-logging-gelf-deployment</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-deployment</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test-gelf</id>
            <activation>
                <property>
                    <name>test-containers</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-gelf</id>
            <activation>
                <property>
                    <name>start-containers</name>
                </property>
            </activation>
            <properties>
                <elasticsearch.hosts>localhost:9200</elasticsearch.hosts>
                <elasticsearch.protocol>http</elasticsearch.protocol>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>${elasticsearch.image}</name>
                                    <alias>elasticsearch</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>elk</name>
                                            <alias>elasticsearch</alias>
                                        </network>
                                        <cpus>2</cpus>
                                        <cpuShares>2048</cpuShares>
                                        <ports>
                                            <port>9200:9200</port>
                                        </ports>
                                        <env>
                                            <discovery.type>single-node</discovery.type>
                                            <xpack.security.enabled>false</xpack.security.enabled>
                                            <!--
                                                Disable disk allocation decider as CI can be low on disk space and we
                                                only create small indices.
                                             -->
                                            <cluster.routing.allocation.disk.threshold_enabled>false</cluster.routing.allocation.disk.threshold_enabled>
                                            <ES_JAVA_OPTS>-Xms512m -Xmx512m</ES_JAVA_OPTS>
                                        </env>
                                        <log>
                                            <prefix>Elasticsearch:</prefix>
                                            <date>default</date>
                                            <color>cyan</color>
                                        </log>
                                        <wait>
                                            <http>
                                                <url>http://localhost:9200</url>
                                                <method>GET</method>
                                                <status>200</status>
                                            </http>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>${logstash.image}</name>
                                    <alias>logstash</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>elk</name>
                                            <alias>logstash</alias>
                                        </network>
                                        <cpus>2</cpus>
                                        <cpuShares>2048</cpuShares>
                                        <ports>
                                            <port>12201:12201/udp</port>
                                            <port>5000:5000</port>
                                            <port>9600:9600</port>
                                        </ports>
                                        <log>
                                            <prefix>Logstash:</prefix>
                                            <date>default</date>
                                            <color>magenta</color>
                                        </log>
                                        <volumes>
                                            <bind>
                                                <volume>${project.basedir}/src/test/resources/pipeline:/usr/share/logstash/pipeline${volume.access.modifier}</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <http>
                                                <url>http://localhost:9600</url>
                                                <method>GET</method>
                                                <status>200</status>
                                            </http>
                                            <!-- Starting the pipeline can be long as it needs to communicate with Elasticsearch -->
                                            <time>90000</time>
                                        </wait>
                                        <dependsOn>
                                            <container>elasticsearch</container>
                                        </dependsOn>
                                    </run>
                                </image>
                            </images>
                            <allContainers>true</allContainers>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-start</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-prune</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/../../.github/docker-prune.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native-image</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <!-- add some custom config, the rest comes from parent -->
            <properties>
                <quarkus.native.enable-https-url-handler>true</quarkus.native.enable-https-url-handler>
            </properties>
        </profile>
        <!-- Disabled pending fix of #33090 -->
        <profile>
            <id>podman</id>
            <activation>
                <property>
                    <name>env.IS_PODMAN</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skipTests>true</skipTests>
                <skipITs>true</skipITs>
                <enforcer.skip>true</enforcer.skip>
            </properties>
            <build>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
            </build>
        </profile>
    </profiles>

</project>
