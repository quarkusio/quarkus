name: Quarkus CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    # paths-ignore in ci-fork-mvn-cache.yml should match
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - 'docs/src/main/asciidoc/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '.github/*.java'
      - '.github/*.conf'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - 'docs/src/main/asciidoc/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '.github/*.java'
      - '.github/*.conf'

env:
  # Workaround testsuite locale issue
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_OPTS: "-B --settings .github/mvn-settings.xml --fail-at-end -Dquarkus.native.container-build=true -Dtest-containers -Dstart-containers -Dnative-image.xmx=5g -Dnative -Dnative.surefire.skip -Dformat.skip -Dno-descriptor-tests install -DskipDocs"
  JVM_TEST_MAVEN_OPTS: "-e -B --settings .github/mvn-settings.xml -Dtest-containers -Dstart-containers -Dformat.skip -DskipDocs"
  DB_USER: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_NAME: hibernate_orm_test
jobs:
  ci-sanity-check:
    name: "CI Sanity Check"
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    steps:
      - name: Build
        run: sleep 30
  build-jdk11:
    name: "Initial JDK 11 Build"
    runs-on: ubuntu-latest
    # Skip master in forks
    # Skip draft PRs and those with WIP in the subject, rerun as soon as its removed
    if: "(github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')) && ( \
           github.event_name != 'pull_request' || ( \
             github.event.pull_request.draft == false && \
             github.event.pull_request.state != 'closed' && \
             contains(github.event.pull_request.title, 'wip ') == false && \
             contains(github.event.pull_request.title, '[wip]') == false && \
             (
               github.event.action != 'edited' || \
               contains(github.event.changes.title.from, 'wip ') || \
               contains(github.event.changes.title.from, '[wip]') \
             ) \
           ) \
         )"
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache Maven Repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          # refresh cache every month to avoid unlimited growth
          key: q2maven-${{ steps.get-date.outputs.date }}
      - name: Build
        run: |
          mvn -e -B -DskipTests -DskipITs -Dno-format -Dtcks --settings .github/mvn-settings.xml clean install
      - name: Tar Maven Repo
        shell: bash
        run: tar -czf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
      - name: Delete Local Artifacts From Cache
        shell: bash
        run: rm -r ~/.m2/repository/io/quarkus


  windows-jdk11-jvm-tests:
    name: JVM Tests - JDK 11 Windows
    runs-on: windows-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 180
    env:
      MAVEN_OPTS: -Xmx1408m  -XX:MaxMetaspaceSize=1000m

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn -B --settings .github/mvn-settings.xml -DskipDocs -Dno-native -Dformat.skip -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools install
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-windows-jdk11-jvm
          path: 'test-reports.tgz'


  windows-jdk11-jvm-tests2:
    name: JVM Tests - JDK 11 Windows2
    runs-on: windows-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 180
    env:
      MAVEN_OPTS: -Xmx1408m  -XX:MaxMetaspaceSize=1000m

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn -B --settings .github/mvn-settings.xml -DskipDocs -Dno-native -Dformat.skip -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools install
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-windows-jdk11-jvm
          path: 'test-reports.tgz'


  windows-jdk11-jvm-tests3:
    name: JVM Tests - JDK 11 Windows3
    runs-on: windows-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 180
    env:
      MAVEN_OPTS: -Xmx1408m  -XX:MaxMetaspaceSize=1000m

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn -B --settings .github/mvn-settings.xml -DskipDocs -Dno-native -Dformat.skip -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools install
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-windows-jdk11-jvm
          path: 'test-reports.tgz'


  windows-jdk11-jvm-tests4:
    name: JVM Tests - JDK 11 Windows4
    runs-on: windows-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 180
    env:
      MAVEN_OPTS: -Xmx1408m  -XX:MaxMetaspaceSize=1000m

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn -B --settings .github/mvn-settings.xml -DskipDocs -Dno-native -Dformat.skip -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools install
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-windows-jdk11-jvm
          path: 'test-reports.tgz'
