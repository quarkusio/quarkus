quarkus.management.enabled=true
# Management router authentication:
# /q/health/* - basic authentication only, `management` role is required
# /q/metrics/* - basic and jwt authentications are allowed, any role is allowed
quarkus.management.auth.basic=true
quarkus.management.auth.policy.role-policy.roles-allowed=management
quarkus.management.auth.permission.health.paths=/q/health/*
quarkus.management.auth.permission.health.policy=role-policy
quarkus.management.auth.permission.health.auth-mechanism=basic

quarkus.management.auth.permission.metrics.paths=/q/metrics/*
quarkus.management.auth.permission.metrics.policy=authenticated

# Main router authentication:
# /service/hello/* - public resource
# /service/goodbye/* - basic authentication only, `greeting` role is allowed
# /service/goodmorning/* - JWT bearer authentication only, `admin` role is allowed
# /service/goodevening/* - JWT bearer authentication only, `user` role is allowed

quarkus.http.auth.basic=true
quarkus.http.auth.policy.role-policy.roles-allowed=greeting

quarkus.http.auth.permission.main.paths=/service/goodbye
quarkus.http.auth.permission.main.policy=role-policy
quarkus.http.auth.permission.main.auth-mechanism=basic

quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
quarkus.security.users.embedded.users.alice=alice
quarkus.security.users.embedded.roles.alice=management

quarkus.security.users.embedded.users.bob=bob
quarkus.security.users.embedded.roles.bob=greeting

quarkus.http.auth.policy.role-policy-jwt-admin.roles-allowed=admin
quarkus.http.auth.permission.main-jwt-admin.paths=/service/goodmorning
quarkus.http.auth.permission.main-jwt-admin.policy=role-policy-jwt-admin
quarkus.http.auth.permission.main-jwt-admin.auth-mechanism=bearer

quarkus.http.auth.policy.role-policy-jwt-user.roles-allowed=user
quarkus.http.auth.permission.main-jwt-user.paths=/service/goodevening
quarkus.http.auth.permission.main-jwt-user.policy=role-policy-jwt-user
quarkus.http.auth.permission.main-jwt-user.auth-mechanism=bearer

mp.jwt.verify.publickey.location=/publicKey.pem
mp.jwt.verify.issuer=https://server.example.com
smallrye.jwt.sign.key.location=/privateKey.pem
smallrye.jwt.new-token.issuer=https://server.example.com