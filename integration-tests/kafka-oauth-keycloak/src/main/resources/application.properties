quarkus.log.category.kafka.level=WARN
quarkus.log.category.\"org.apache.kafka\".level=WARN
quarkus.log.category.\"org.apache.zookeeper\".level=WARN

mp.messaging.connector.smallrye-kafka.security.protocol=SASL_PLAINTEXT
mp.messaging.connector.smallrye-kafka.sasl.mechanism=OAUTHBEARER
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="kafka-client" \
  oauth.client.secret="kafka-client-secret" \
  oauth.token.endpoint.uri="http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/token" ;
mp.messaging.connector.smallrye-kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

mp.messaging.outgoing.out.connector=smallrye-kafka
mp.messaging.outgoing.out.topic=mytopic
mp.messaging.outgoing.out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.in.connector=smallrye-kafka
mp.messaging.incoming.in.topic=mytopic
mp.messaging.incoming.in.auto.offset.reset=earliest
mp.messaging.incoming.in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# enable health check
quarkus.kafka.health.enabled=true

# using QuarkusTestResourceLifecycleManager in this test: Kafka configuration needs to be tuned to work with Keycloak
quarkus.kafka.devservices.enabled=false
