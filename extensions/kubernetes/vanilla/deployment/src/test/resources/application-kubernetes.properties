quarkus.kubernetes.part-of=konoha
quarkus.kubernetes.name=naruto
quarkus.kubernetes.version=7th
quarkus.kubernetes.deployment-kind=deployment
quarkus.kubernetes.namespace=land-of-fire
quarkus.kubernetes.labels.father=minato
quarkus.kubernetes.labels.mother=kushina
quarkus.kubernetes.annotations.rank=kage
quarkus.kubernetes.annotations.clan=uzumaki
quarkus.kubernetes.add-build-timestamp=true
quarkus.kubernetes.working-dir=hokage-office
quarkus.kubernetes.command=rasengan,rasenshuriken
quarkus.kubernetes.arguments=chakra,wind
quarkus.kubernetes.service-account=rikudo

quarkus.kubernetes.ports.http.container-port=1234
quarkus.kubernetes.ports.http.host-port=4321
quarkus.kubernetes.ports.http.node-port=30000
# Can't verify because it requires KubernetesPortBuildItem
quarkus.kubernetes.ports.http.path=/http
quarkus.kubernetes.ports.http.protocol=tcp
quarkus.kubernetes.ports.http.tls=true
quarkus.kubernetes.ports.grpc.container-port=2222
quarkus.kubernetes.ports.grpc.host-port=4444
quarkus.kubernetes.ports.grpc.node-port=30001
# Can't verify because it requires KubernetesPortBuildItem
quarkus.kubernetes.ports.grpc.path=/grpc
quarkus.kubernetes.ports.grpc.protocol=tcp
quarkus.kubernetes.ports.grpc.tls=true

quarkus.kubernetes.service-type=NodePort
# This should be applied to all ports without node-ports, but it seems it only works for a single element
quarkus.kubernetes.node-port=30000
quarkus.kubernetes.replicas=666
quarkus.kubernetes.strategy=RollingUpdate
quarkus.kubernetes.rolling-update.max-unavailable=99%
quarkus.kubernetes.rolling-update.max-surge=99%

quarkus.kubernetes.image-pull-policy=IfNotPresent
quarkus.kubernetes.image-pull-secrets=wind,fire,earth

# data.".dockerconfigjson"
quarkus.container-image.username=sasuke
quarkus.container-image.password=uchiha
quarkus.kubernetes.generate-image-pull-secret=true

quarkus.kubernetes.liveness-probe.http-action-port=4231
quarkus.kubernetes.liveness-probe.http-action-port-name=http
quarkus.kubernetes.liveness-probe.http-action-path=/http
quarkus.kubernetes.liveness-probe.http-action-scheme=HTTP
quarkus.kubernetes.liveness-probe.exec-action=/action
quarkus.kubernetes.liveness-probe.tcp-socket-action=localhost:4231
quarkus.kubernetes.liveness-probe.grpc-action=4444
quarkus.kubernetes.liveness-probe.grpc-action-enabled=true
quarkus.kubernetes.liveness-probe.initial-delay=666
quarkus.kubernetes.liveness-probe.period=1s
quarkus.kubernetes.liveness-probe.timeout=1s
quarkus.kubernetes.liveness-probe.success-threshold=1
quarkus.kubernetes.liveness-probe.failure-threshold=0
quarkus.kubernetes.readiness-probe.http-action-port=4231
quarkus.kubernetes.readiness-probe.http-action-port-name=http
quarkus.kubernetes.readiness-probe.http-action-path=/http
quarkus.kubernetes.readiness-probe.http-action-scheme=HTTP
quarkus.kubernetes.readiness-probe.exec-action=/action
quarkus.kubernetes.readiness-probe.tcp-socket-action=localhost:4231
quarkus.kubernetes.readiness-probe.grpc-action=4444
quarkus.kubernetes.readiness-probe.grpc-action-enabled=true
quarkus.kubernetes.readiness-probe.initial-delay=666
quarkus.kubernetes.readiness-probe.period=1s
quarkus.kubernetes.readiness-probe.timeout=1s
quarkus.kubernetes.readiness-probe.success-threshold=1
quarkus.kubernetes.readiness-probe.failure-threshold=0
quarkus.kubernetes.startup-probe.http-action-port=4231
quarkus.kubernetes.startup-probe.http-action-port-name=http
quarkus.kubernetes.startup-probe.http-action-path=/http
quarkus.kubernetes.startup-probe.http-action-scheme=HTTP
quarkus.kubernetes.startup-probe.exec-action=/action
quarkus.kubernetes.startup-probe.tcp-socket-action=localhost:4231
quarkus.kubernetes.startup-probe.grpc-action=4444
quarkus.kubernetes.startup-probe.grpc-action-enabled=true
quarkus.kubernetes.startup-probe.initial-delay=666
quarkus.kubernetes.startup-probe.period=1s
quarkus.kubernetes.startup-probe.timeout=1s
quarkus.kubernetes.startup-probe.success-threshold=1
quarkus.kubernetes.startup-probe.failure-threshold=0

quarkus.kubernetes.mounts.fire.name=fire
quarkus.kubernetes.mounts.fire.path=fire
quarkus.kubernetes.mounts.fire.sub-path=fire
quarkus.kubernetes.mounts.fire.read-only=true
quarkus.kubernetes.mounts.water.name=water
quarkus.kubernetes.mounts.water.path=water
quarkus.kubernetes.mounts.water.sub-path=water
quarkus.kubernetes.mounts.water.read-only=true
quarkus.kubernetes.secret-volumes.wind.secret-name=wind
quarkus.kubernetes.secret-volumes.wind.default-mode=0777
quarkus.kubernetes.secret-volumes.wind.items.wind.path=wind
quarkus.kubernetes.secret-volumes.wind.items.wind.mode=0777
quarkus.kubernetes.secret-volumes.wind.optional=true
quarkus.kubernetes.config-map-volumes.earth.config-map-name=earth
quarkus.kubernetes.config-map-volumes.earth.default-mode=0777
quarkus.kubernetes.config-map-volumes.earth.items.earth.path=earth
quarkus.kubernetes.config-map-volumes.earth.items.earth.mode=0777
quarkus.kubernetes.config-map-volumes.earth.optional=true
quarkus.kubernetes.empty-dir-volumes=one,two,three

# Couldn't find usages of io.quarkus.kubernetes.deployment.KubernetesConfig.getGitRepoVolumes
quarkus.kubernetes.git-repo-volumes.git.repository=quarkus
quarkus.kubernetes.git-repo-volumes.git.directory=quarkus
quarkus.kubernetes.git-repo-volumes.git.revision=quarkus
quarkus.kubernetes.pvc-volumes.gaara.claim-name=gaara
quarkus.kubernetes.pvc-volumes.gaara.default-mode=0777
quarkus.kubernetes.pvc-volumes.gaara.optional=true
quarkus.kubernetes.aws-elastic-block-store-volumes.sakura.volume-id=sakura
quarkus.kubernetes.aws-elastic-block-store-volumes.sakura.partition=0
quarkus.kubernetes.aws-elastic-block-store-volumes.sakura.fs-type=sakura
quarkus.kubernetes.aws-elastic-block-store-volumes.sakura.read-only=true
quarkus.kubernetes.azure-file-volumes.shikamaru.share-name=shikamaru
quarkus.kubernetes.azure-file-volumes.shikamaru.secret-name=shikamaru
quarkus.kubernetes.azure-file-volumes.shikamaru.read-only=true
quarkus.kubernetes.azure-disk-volumes.temari.disk-name=temari
quarkus.kubernetes.azure-disk-volumes.temari.disk-uri=temari
quarkus.kubernetes.azure-disk-volumes.temari.kind=shared
quarkus.kubernetes.azure-disk-volumes.temari.caching-mode=none
quarkus.kubernetes.azure-disk-volumes.temari.fs-type=temari
quarkus.kubernetes.azure-disk-volumes.temari.read-only=true

# This is being retrieved programmatically in KubernetesConfigUtil
quarkus.kubernetes.deployment-target=kubernetes,openshift,knative,minikube

# ip is not being used - HostAliasConverter, ip in the kubernetes.yaml is being mapped to the key
quarkus.kubernetes.hostaliases.konoha.ip=0.0.0.0
quarkus.kubernetes.hostaliases.konoha.hostnames=dev,qly,prod

quarkus.kubernetes.node-selector.key=jutsu
quarkus.kubernetes.node-selector.value=katon

quarkus.kubernetes.resources.limits.cpu=fuuton
quarkus.kubernetes.resources.limits.memory=raiton
quarkus.kubernetes.resources.requests.cpu=katon
quarkus.kubernetes.resources.requests.memory=suiton

quarkus.kubernetes.rbac.roles.kankuro.name=kankuro
quarkus.kubernetes.rbac.roles.kankuro.namespace=kankuro
quarkus.kubernetes.rbac.roles.kankuro.labels.sand=sand
quarkus.kubernetes.rbac.roles.kankuro.policy-rules.kankuro.api-groups=kankuro
quarkus.kubernetes.rbac.roles.kankuro.policy-rules.kankuro.non-resource-urls=kankuro
quarkus.kubernetes.rbac.roles.kankuro.policy-rules.kankuro.resource-names=kankuro
quarkus.kubernetes.rbac.roles.kankuro.policy-rules.kankuro.resources=kankuro
quarkus.kubernetes.rbac.roles.kankuro.policy-rules.kankuro.verbs=kankuro
quarkus.kubernetes.rbac.cluster-roles.kakashi.name=kakashi
quarkus.kubernetes.rbac.cluster-roles.kakashi.labels.fire=fire
quarkus.kubernetes.rbac.cluster-roles.kakashi.policy-rules.kakashi.api-groups=kakashi
quarkus.kubernetes.rbac.cluster-roles.kakashi.policy-rules.kakashi.non-resource-urls=kakashi
quarkus.kubernetes.rbac.cluster-roles.kakashi.policy-rules.kakashi.resource-names=kakashi
quarkus.kubernetes.rbac.cluster-roles.kakashi.policy-rules.kakashi.resources=kakashi
quarkus.kubernetes.rbac.cluster-roles.kakashi.policy-rules.kakashi.verbs=kakashi
#quarkus.kubernetes.rbac.service-accounts.guy.name=guy
#quarkus.kubernetes.rbac.service-accounts.guy.namespace=guy
#quarkus.kubernetes.rbac.service-accounts.guy.labels.taijutsu=taijutsu
#quarkus.kubernetes.rbac.service-accounts.guy.use-as-default=guy
#quarkus.kubernetes.rbac.role-bindings."role-bindings".name
#quarkus.kubernetes.rbac.role-bindings."role-bindings".labels."label-name"
#quarkus.kubernetes.rbac.role-bindings."role-bindings".role-name
#quarkus.kubernetes.rbac.role-bindings."role-bindings".cluster-wide
#quarkus.kubernetes.rbac.role-bindings."role-bindings".subjects."subjects".name
#quarkus.kubernetes.rbac.role-bindings."role-bindings".subjects."subjects".kind
#quarkus.kubernetes.rbac.role-bindings."role-bindings".subjects."subjects".api-group
#quarkus.kubernetes.rbac.role-bindings."role-bindings".subjects."subjects".namespace
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".name
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".labels."label-name"
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".role-name
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".subjects."subjects".name
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".subjects."subjects".kind
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".subjects."subjects".api-group
#quarkus.kubernetes.rbac.cluster-role-bindings."cluster-role-bindings".subjects."subjects".namespace

quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=tenten
quarkus.kubernetes.ingress.target-port=http
quarkus.kubernetes.ingress.ingress-class-name=tenten
quarkus.kubernetes.ingress.annotations.tenten=tenten
quarkus.kubernetes.ingress.tls.tenten.enabled=true
quarkus.kubernetes.ingress.tls.tenten.hosts=tenten
quarkus.kubernetes.ingress.rules.tenten.host=tenten
quarkus.kubernetes.ingress.rules.tenten.path=/http
quarkus.kubernetes.ingress.rules.tenten.path-type=Prefix
quarkus.kubernetes.ingress.rules.tenten.service-name=naruto
quarkus.kubernetes.ingress.rules.tenten.service-port-name=http
quarkus.kubernetes.ingress.rules.tenten.service-port-number=1010

# quarkus.kubernetes.deployment-kind=Job
quarkus.kubernetes.job.parallelism=7
quarkus.kubernetes.job.completions=7
quarkus.kubernetes.job.completion-mode=Indexed
quarkus.kubernetes.job.backoff-limit=7
quarkus.kubernetes.job.active-deadline-seconds=7
quarkus.kubernetes.job.ttl-seconds-after-finished=7
quarkus.kubernetes.job.suspend=true
quarkus.kubernetes.job.restart-policy=Never

# quarkus.kubernetes.deployment-kind=CronJob
quarkus.kubernetes.cron-job.schedule=-
quarkus.kubernetes.cron-job.concurrency-policy=Forbid
quarkus.kubernetes.cron-job.starting-deadline-seconds=7
quarkus.kubernetes.cron-job.failed-jobs-history-limit=7
quarkus.kubernetes.cron-job.successful-jobs-history-limit=7
quarkus.kubernetes.cron-job.parallelism=7
quarkus.kubernetes.cron-job.completions=7
quarkus.kubernetes.cron-job.completion-mode=Indexed
quarkus.kubernetes.cron-job.backoff-limit=7
quarkus.kubernetes.cron-job.active-deadline-seconds=7
quarkus.kubernetes.cron-job.ttl-seconds-after-finished=7
quarkus.kubernetes.cron-job.suspend=true
quarkus.kubernetes.cron-job.restart-policy=Never

quarkus.kubernetes.add-version-to-label-selectors=true
quarkus.kubernetes.add-name-to-label-selectors=true
quarkus.kubernetes.deploy=false
quarkus.kubernetes.deploy-strategy=Create
quarkus.kubernetes.app-secret=sasuke
quarkus.kubernetes.app-config-map=sasuke
quarkus.kubernetes.container-name=sasuke

quarkus.kubernetes.env.secrets=sasuke
quarkus.kubernetes.env.configmaps=sasuke
quarkus.kubernetes.env.vars.UZUMAKI_NARUTO=naruto
quarkus.kubernetes.env.vars.UCHIHA_SASUKE=sasuke
#quarkus.kubernetes.env.fields."environment-variable-name"=
#quarkus.kubernetes.env.mapping."mapping".from-secret=
#quarkus.kubernetes.env.mapping."mapping".from-configmap=
#quarkus.kubernetes.env.mapping."mapping".with-key=
#quarkus.kubernetes.env.using-prefix."prefixes".for-secret=
#quarkus.kubernetes.env.using-prefix."prefixes".for-configmap=

# OpenShift
quarkus.openshift.name=sasuke
quarkus.openshift.version=0

# Knative
quarkus.knative.mounts.client-crts.path=/mnt/clientcerts
quarkus.knative.secret-volumes.client-crts.secret-name=clientcerts
quarkus.knative.mounts.client-cfg.path=/mnt/clientconfig
quarkus.knative.config-map-volumes.client-cfg.config-map-name=clientconfig

